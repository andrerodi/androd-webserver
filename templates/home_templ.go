// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.696
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"time"
)

func Home() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"animate\" class=\"tilt-in-top-1\"><img src=\"/static/img/dancing-gopher.gif\" alt=\"dancing-gopher-missing :(\" width=\"64px\" height=\"64px\"><div class=\"card card-border\" style=\"max-width: 430px;\"><div class=\"card-content\"><p id=\"joke\" class=\"title\">“There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.”</p><p id=\"joke-author\" class=\"subtitle\">Jeff Atwood</p></div></div></div><script>\r\n    window.onload = jokeFunc();\r\n  </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func updateConcurrencyJoke() <-chan string {
	ch := make(chan string)

	go func() {
		ch <- "“There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.”"
		time.Sleep(5 * time.Second)
		ch <- "“There are three concurrency! hard things in computer science: cache invalidation, naming things, off by one errors, and”"
	}()

	return ch
}
